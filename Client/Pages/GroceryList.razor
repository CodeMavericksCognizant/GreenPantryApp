@page "/grocerylist"
@using GreenPantryApp.Shared
@inject HttpClient _httpClient
@inject IJSRuntime JsRuntime
<h1>Grocery Detail</h1>
<div>
    <a href="/addfood"> Add New Food Item</a>
    @if (groceryList != null)
    {
        <table class="table-bordered">
            <thead>
            <tr>
                <th width = "40%">Grocery Item</th>
                <th width = "30%">Purchase Date</th>
                <th width = "30%">Expiration Date</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var p in groceryList)
            {
                <tr>
                    <td>
                        @p.GroceryItem
                    </td>
                    <td>@p.PurchaseDate</td>
                    <td>@p.ExpirationDate</td>
                    <td>
                        <a href="/editfood/@p.Id">Edit</a> |
                        <a href="/deletefood/@p.Id">Delete</a>
                        <a href="/shoppinglist/@p.Id">Move to Shopping List</a>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    }
</div>
@code {
    List<GroceryViewModel> groceryList = new List<GroceryViewModel>();
    protected override async Task OnInitializedAsync()
    {
        var response = await _httpClient.GetAsync("api/Foods");
        response.EnsureSuccessStatusCode();
        groceryList = await response.Content.ReadFromJsonAsync<List<GroceryViewModel>>();
        DateTime temp = DateTime.Now;
        string message="";
        foreach(var g in groceryList)
        {
            var tempDays = (g.ExpirationDate-temp).Days;
            if ( tempDays<=3)
            {
                message+= "\n"+g.GroceryItem + " expiring in " + tempDays + " days!";

            }
        }
        if (message.Length > 1)
        {
            await JsRuntime.InvokeVoidAsync("alert", message);
        }
    }


}